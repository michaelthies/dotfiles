module MyRailsHelpers
  def route_for(url, method = :get)
    ActionController::Routing::Routes.recognize_path(url, :method => method)
  end

  def sql(query)
    ActiveRecord::Base.connection.select_all(query)
  end

  def loud_logger
    set_logger_to Logger.new(STDOUT)
  end

  def quiet_logger
    set_logger_to nil
  end

  def set_logger_to(logger)
    ActiveRecord::Base.logger = logger
    ActiveRecord::Base.clear_active_connections!
  end

  def feed
    @_feed ||= ContentItemFeed.new
  end

  def feedme(fname = "single_event.xml")
    feed.process_feed(fname)
  end

  def find_ci(id)
    ContentItem.find id
  end

  def ci(id=nil)
    id ? @_ci = find_ci(id) : @_ci
  end

  def find_epk(source, key)
    key = key.to_s
    ExternalPrimaryKey.find_by_source_and_key(source, key)
  end

  def epk(source=nil, key=nil)
    [source, key].all? ? @_epk = find_epk(source, key) : @_epk
  end

  def find_venue(id)
    Venue.find id
  end

  def v(id=nil)
    id ? @_v = find_venue(id) : @_v
  end

  def find_site(market)
    Site.find_all.detect {|s| s.market == market}
  end

  def site(market=nil)
    market ? @_s = find_site(market) : @_s
  end
end

include MyRailsHelpers

class Object
  def mgrep(regex=nil)
    self.methods.grep(regex).sort
  end
end
